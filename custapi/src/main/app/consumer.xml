<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd">
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8081" basePath="/api" doc:name="HTTP Request Configuration">
        <http:raml-api-configuration location="customersearchapiusingresourcetypestraits.raml"/>
    </http:request-config>
    <file:connector name="File" autoDelete="true" outputAppend="true" streaming="true" validateConnections="true" doc:name="File"/>
    <flow name="getallcustomer">
        <http:listener config-ref="customersearchapiusingresourcetypestraits-httpListenerConfig" path="/customers" doc:name="HTTP"/>
        <expression-component doc:name="Expression"><![CDATA[if(message.inboundProperties.'http.query.params'.offset == empty ) {
  flowVars.offset=0 ;

}else {
flowVars.offset=message.inboundProperties.'http.query.params'.offset;

}

if(message.inboundProperties.'http.query.params'.limit == empty ) {
  flowVars.limit=10 ;

}else {
flowVars.limit=message.inboundProperties.'http.query.params'.limit;

}

if(message.inboundProperties.'http.query.params'.bypasscache == 'false' ) {
  flowVars.bypasscache= 'false' ;

}else {
flowVars.bypasscache= 'true';

}

]]></expression-component>
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.query.params'.postcode==empty]">
                <flow-ref name="getallcustomers" doc:name="getallcustomers"/>
            </when>
            <when expression="#[message.inboundProperties.'http.query.params'.postcode!=empty]">
                <flow-ref name="getcustomersbypostcode" doc:name="getcustomersbypostcode"/>
            </when>
            <otherwise>
                <set-payload value="{&quot;message&quot;: &quot;Invalid Request&quot;}" doc:name="Set Payload"/>
            </otherwise>
        </choice>
        <file:outbound-endpoint path="." outputPattern="Out.log" connector-ref="File" responseTimeout="10000" doc:name="File"/>
    </flow>
    <flow name="getallcustomers">
        <http:request config-ref="HTTP_Request_Configuration" path="/customers" method="GET" doc:name="HTTP">
            <http:request-builder>
                <http:query-param paramName="offset" value="#[flowVars.offset]"/>
                <http:query-param paramName="limit" value="#[flowVars.limit]"/>
            </http:request-builder>
        </http:request>
    </flow>
    <flow name="getcustomersbypostcode">
        <http:request config-ref="HTTP_Request_Configuration" path="/customers" method="GET" doc:name="HTTP">
        	 <http:request-builder>
                <http:query-param paramName="offset" value="#[flowVars.offset]"/>
                <http:query-param paramName="limit" value="#[flowVars.limit]"/>
                <http:query-param paramName="postcode" value="#[message.inboundProperties.'http.query.params'.postcode]"/>
            </http:request-builder>
        </http:request>
    </flow>
</mule>
